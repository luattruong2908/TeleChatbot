import logging
import requests
import os
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
DIFY_API_KEY = os.getenv("DIFY_API_KEY")
DIFY_API_URL = "https://api.dify.ai/v1/chat-messages"

logging.basicConfig(level=logging.INFO)

# H√†m x·ª≠ l√Ω tin nh·∫Øn
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    user_id = str(update.effective_user.id)

    headers = {
        "Authorization": f"Bearer {DIFY_API_KEY}",
        "Content-Type": "application/json",
    }

    data = {
        "inputs": {},  # n·∫øu b·∫°n c·∫ßn truy·ªÅn input ph·ª• th√¨ ƒëi·ªÅn ·ªü ƒë√¢y
        "query": user_message,
        "user": user_id,
    }

    try:
        response = requests.post(DIFY_API_URL, headers=headers, json=data)
        if response.status_code == 200:
            reply = response.json().get("answer", "Kh√¥ng c√≥ ph·∫£n h·ªìi t·ª´ chatbot.")
        else:
            logging.error(f"Dify API error: {response.status_code} {response.text}")
            reply = "Chatbot g·∫∑p l·ªói khi ph·∫£n h·ªìi."
    except Exception as e:
        logging.exception("L·ªói khi g·ªçi Dify API")
        reply = "ƒê√£ x·∫£y ra l·ªói."

    await update.message.reply_text(reply)

# Ch·∫°y bot
def main():
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("ü§ñ Bot ƒëang ch·∫°y... Nh·∫Øn tin th·ª≠ v√†o Telegram ƒë·ªÉ ki·ªÉm tra.")
    app.run_polling()

if __name__ == "__main__":
    main()
